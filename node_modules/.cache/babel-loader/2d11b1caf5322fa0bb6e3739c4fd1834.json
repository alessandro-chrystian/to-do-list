{"ast":null,"code":"var _jsxFileName = \"F:\\\\app-todo-list-code-practice-base\\\\src\\\\components\\\\EditItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditItem(props) {\n  _s();\n\n  const [isDone, setIsDone] = useState(false);\n\n  function handleEdit() {\n    setIsDone(prevEdit => !prevEdit);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: handleEdit,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: isDone ? 'Done' : 'Undone'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditItem, \"HYWL9zc5ybchE+IuBj/kTeNAANo=\");\n\n_c = EditItem;\nexport default EditItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditItem\");","map":{"version":3,"sources":["F:/app-todo-list-code-practice-base/src/components/EditItem.jsx"],"names":["React","useState","EditItem","props","isDone","setIsDone","handleEdit","prevEdit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,KAAD,CAApC;;AAEA,WAASK,UAAT,GAAqB;AACjBD,IAAAA,SAAS,CAACE,QAAQ,IAAI,CAACA,QAAd,CAAT;AACD;;AAEH,sBACI;AAAK,IAAA,OAAO,EAAED,UAAd;AAAA,2BACI;AAAA,6BACI;AAAA,kBAAOF,MAAM,GAAG,MAAH,GAAY;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAfQF,Q;;KAAAA,Q;AAiBT,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\r\n\r\nfunction EditItem(props) {\r\n\r\n    const [isDone, setIsDone] = useState(false)\r\n\r\n    function handleEdit(){\r\n        setIsDone(prevEdit => !prevEdit)\r\n      }\r\n\r\n    return (\r\n        <div onClick={handleEdit}>\r\n            <button>\r\n                <span>{isDone ? 'Done' : 'Undone'}</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditItem;"]},"metadata":{},"sourceType":"module"}