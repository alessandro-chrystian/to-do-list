{"ast":null,"code":"var _jsxFileName = \"F:\\\\app-todo-list-code-practice-base\\\\src\\\\components\\\\EditItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditItem(props) {\n  _s();\n\n  const [isEdit, setIsEdit] = useState('Edit');\n\n  function handleEdit() {\n    setIsEdit(prevEdit => {\n      if (prevEdit === 'Edit') {\n        return 'Save';\n      } else {\n        return 'Edit';\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => {\n      props.onEdit;\n    },\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: isEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditItem, \"eozWZP8i9fORlqJyJXKeLWw0WFc=\");\n\n_c = EditItem;\nexport default EditItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditItem\");","map":{"version":3,"sources":["F:/app-todo-list-code-practice-base/src/components/EditItem.jsx"],"names":["React","useState","EditItem","props","isEdit","setIsEdit","handleEdit","prevEdit","onEdit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,MAAD,CAApC;;AAEA,WAASK,UAAT,GAAqB;AACjBD,IAAAA,SAAS,CAACE,QAAQ,IAAI;AAClB,UAAGA,QAAQ,KAAK,MAAhB,EAAuB;AACnB,eACI,MADJ;AAGH,OAJD,MAIO;AACH,eAAO,MAAP;AACH;AACJ,KARQ,CAAT;AASH;;AAED,sBACI;AAAQ,IAAA,OAAO,EAAE,MAAM;AACnBJ,MAAAA,KAAK,CAACK,MAAN;AACH,KAFD;AAAA,2BAGI;AAAA,gBAAOJ;AAAP;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAvBQF,Q;;KAAAA,Q;AAyBT,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\r\n\r\nfunction EditItem(props) {\r\n\r\n    const [isEdit, setIsEdit] = useState('Edit')\r\n\r\n    function handleEdit(){\r\n        setIsEdit(prevEdit => {\r\n            if(prevEdit === 'Edit'){\r\n                return (\r\n                    'Save'\r\n                )\r\n            } else {\r\n                return 'Edit'\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <button onClick={() => {\r\n            props.onEdit\r\n        }}>\r\n            <span>{isEdit}</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default EditItem;"]},"metadata":{},"sourceType":"module"}