{"ast":null,"code":"var _jsxFileName = \"D:\\\\app-todo-list-code-practice-base\\\\src\\\\components\\\\EditItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditItem(props) {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  function isEditOn() {\n    setIsEditing(prevEdit => {\n      if (prevEdit) {}\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: isEditOn,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: isEditing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditItem, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = EditItem;\nexport default EditItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditItem\");","map":{"version":3,"sources":["D:/app-todo-list-code-practice-base/src/components/EditItem.jsx"],"names":["React","useState","EditItem","props","isEditing","setIsEditing","isEditOn","prevEdit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AAEpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;;AAEA,WAASK,QAAT,GAAmB;AACfD,IAAAA,YAAY,CAACE,QAAQ,IAAI;AACrB,UAAGA,QAAH,EAAY,CAEX;AACJ,KAJW,CAAZ;AAKH;;AAED,sBACI;AAAA,2BACI;AAAQ,MAAA,OAAO,EAAED,QAAjB;AAAA,6BACI;AAAA,kBAAOF;AAAP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAnBQF,Q;;KAAAA,Q;AAqBT,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\r\n\r\nfunction EditItem(props){\r\n\r\n    const [isEditing, setIsEditing] = useState(false)\r\n\r\n    function isEditOn(){\r\n        setIsEditing(prevEdit => {\r\n            if(prevEdit){\r\n                \r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={isEditOn}>\r\n                <span>{isEditing}</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditItem;"]},"metadata":{},"sourceType":"module"}