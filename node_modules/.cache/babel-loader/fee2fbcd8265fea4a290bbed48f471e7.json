{"ast":null,"code":"var _jsxFileName = \"F:\\\\app-todo-list-code-practice-base\\\\src\\\\components\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\nimport InputArea from \"./InputArea\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [items, setItems] = useState([]);\n\n  function addItem(item) {\n    setItems(prevItems => {\n      if (item === '') {\n        return [...prevItems];\n      } else {\n        return [...prevItems, {\n          text: item,\n          isCompleted: false,\n          isEdited: false\n        }];\n      }\n    });\n    console.log(items);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputArea, {\n      onAdd: addItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(ToDoItem, {\n            text: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/app-todo-list-code-practice-base/src/components/App.jsx"],"names":["React","useState","ToDoItem","InputArea","App","items","setItems","addItem","item","prevItems","text","isCompleted","isEdited","console","log","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAGb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASM,OAAT,CAAiBC,IAAjB,EAAuB;AACrBF,IAAAA,QAAQ,CAACG,SAAS,IAAI;AACpB,UAAGD,IAAI,KAAK,EAAZ,EAAe;AACb,eAAO,CAAC,GAAGC,SAAJ,CAAP;AACD,OAFD,MAEO;AACL,eAAO,CAAC,GAAGA,SAAJ,EAAe;AAACC,UAAAA,IAAI,EAAEF,IAAP;AAAaG,UAAAA,WAAW,EAAE,KAA1B;AAAiCC,UAAAA,QAAQ,EAAE;AAA3C,SAAf,CAAP;AACD;AACF,KANO,CAAR;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA,YALF,eAOE;AAAA,6BACE;AAAA,kBACGF,KAAK,CAACU,GAAN,CAAU,CAACP,IAAD,EAAOQ,KAAP,KAAiB;AAC1B,8BAAO,QAAC,QAAD;AAAsB,YAAA,IAAI,EAAER;AAA5B,aAAeQ,KAAf;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAjCQZ,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\nimport InputArea from \"./InputArea\";\n\nfunction App() {\n\n\n  const [items, setItems] = useState([]);\n\n  function addItem(item) {\n    setItems(prevItems => {\n      if(item === ''){\n        return [...prevItems]\n      } else {\n        return [...prevItems, {text: item, isCompleted: false, isEdited: false}]\n      }\n    })\n    console.log(items)\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n     \n      <InputArea onAdd={addItem} />\n\n      <div>\n        <ul>\n          {items.map((item, index) => {\n            return <ToDoItem key={index} text={item} />\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}